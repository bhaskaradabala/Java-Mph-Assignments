Solutions for LIST Questions in single code...


import java.util.*;

class Student{
    int id;
    String name;
    
    Student(int id, String name){
        this.id = id;
        this.name = name;
    }
    public String toString() {
       return id + " - " + name;
   }
}

public class Main {
   public static void main(String[] args) {
       
       List<Integer> numbers = new ArrayList<>();
       numbers.add(5);
       numbers.add(12);
       numbers.add(69);
       numbers.add(20);
       numbers.add(25);
       numbers.add(43);
       numbers.add(85);
       numbers.add(46);
       numbers.add(75);
       numbers.add(99);
       System.out.println("List of integers: " + numbers);
       
       
       
       List<Integer> numbers2 = new ArrayList<>(numbers); 
       Iterator<Integer> itr = numbers2.iterator();
       while (itr.hasNext()) {
           int num = itr.next();
           if (num % 2 == 0) {
               itr.remove(); 
           }
       }
       System.out.println("List without even numbers: " + numbers2);
       
       int max = Collections.max(numbers);
       int min = Collections.min(numbers);
       System.out.println("Maximum value: " + max);
       System.out.println("Minimum value: " + min);
       
       
       
       List<Integer> sortedList = new ArrayList<>(numbers);
       Collections.sort(sortedList);
       System.out.println("Ascending order: " + sortedList);
       Collections.sort(sortedList, Collections.reverseOrder());
       System.out.println("43escending order: " + sortedList);
       
       
       
       
       List<Integer> rev = new ArrayList<>();
       for (int i = numbers.size() - 1; i >= 0; i--) {
           rev.add(numbers.get(i));
       }
       System.out.println("Reverse List (Manual): " + rev);
       
       
       
       List<Integer> revB = new ArrayList<>(numbers);
       Collections.reverse(revB);
       System.out.println("Reverse list (Build-in): " + revB);
       
       
       List<String> fruits = Arrays.asList("apple", "banana", "cherry");
       String s = "banana";
       if (fruits.contains(s)) {
           System.out.println(s + " is in the list");
       } else {
           System.out.println(s + " is not in the list");
       }
       
       
       
       List<String> names = Arrays.asList("ram", "sai", "ram", "ravi", "sam");
       Set<String> set = new HashSet<>();
       Set<String> dup = new HashSet<>();
       for (String name : names) {
           if (!set.add(name)) {
               dup.add(name);
           }
       }
       System.out.println("Duplicate names: " + dup);
      
       String[] arr = {"Bhaskar", "Surya", "Prakash"};
       List<String> arrList = Arrays.asList(arr);
       System.out.println("Converted list: " + arrList);
       
       
       
       List<Integer> list1 = Arrays.asList(1, 2, 3);
       List<Integer> list2 = Arrays.asList(4, 5, 6);
       List<Integer> merged = new ArrayList<>();
       for (int num : list1) {
           merged.add(num);
       }
       for (int num : list2) {
           merged.add(num);
       }
       System.out.println("Merged List: " + merged);
       
       List<Student> students = new ArrayList<>();
       students.add(new Student(101, "Bhaskar"));
       students.add(new Student(102, "Surya"));
       students.add(new Student(103, "Prakash"));
       
       students.sort(Comparator.comparing(st -> st.name));
       System.out.println("Students sorted by name:");
       for (Student st : students) {
           System.out.println(st);
       }
   }
}




Solutions for SET Questions....